# ------------------------------------------------------
# 🧪 CI - Lint, Test, Typecheck, Build
# ------------------------------------------------------
# main 브랜치에 코드가 push되거나, PR이 생성될 때마다 실행
# 코드 품질 검증 (lint → typecheck → test → build) 목적
# ------------------------------------------------------

name: 🧪 CI - Lint, Test, Typecheck, Build

on:
  push:
    branches: [main] # main 브랜치로 push될 때마다 실행
  pull_request:
    branches: [main] # main 브랜치를 대상으로 하는 PR도 실행

jobs:
  validate:
    name: 🧰 Validate & Build
    runs-on: ubuntu-latest # GitHub Actions Runner OS (리눅스 최신 버전)

    steps:
      # ------------------------------------------------------
      # 1️⃣ 리포지토리 체크아웃
      # - 현재 리포지토리의 코드를 runner 환경에 다운로드
      # ------------------------------------------------------
      - name: 📂 Checkout Repository
        uses: actions/checkout@v4

      # ------------------------------------------------------
      # 2️⃣ PNPM 세팅
      # - CI 환경에 pnpm 설치
      # ------------------------------------------------------
      - name: 🛠️ Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10.19.0 # package.json > engines.pnpm

      # ------------------------------------------------------
      # 3️⃣ Node.js 환경 설정
      # - Node 20 + pnpm 캐시 구성
      # ------------------------------------------------------
      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # .nvmrc에 명시된 Node 버전 (>=20)
          cache: 'pnpm' # 속도 향상

      # ------------------------------------------------------
      # 4️⃣ 의존성 설치
      # - pnpm-lock.yaml 기준으로 설치 (버전 일관성 보장)
      # ------------------------------------------------------
      - name: 📦 Install Dependencies
        run: pnpm install --frozen-lockfile

      # ------------------------------------------------------
      # 5️⃣ 린트 검사 (ESLint + Stylelint)
      # ------------------------------------------------------
      - name: 🔍 Lint (ESLint + Stylelint)
        run: pnpm lint

      # ------------------------------------------------------
      # 6️⃣ 타입 체크 (TypeScript)
      # - --noEmit: 실제 빌드 없이 타입 검사 수행
      # ------------------------------------------------------
      - name: 🧩 Type Check (tsc)
        run: pnpm typecheck

      # ------------------------------------------------------
      # 7️⃣ 테스트 실행 (unit + ui)
      #  - 로직/컴포넌트 단위 테스트 + UI 테스트 모두 수행
      # ------------------------------------------------------
      - name: 🧪 Run Tests (unit + ui)
        run: pnpm test

      # ------------------------------------------------------
      # 8️⃣ 라이브러리 빌드 (tsup)
      # - 배포 전 빌드 오류 검증 목적
      # ------------------------------------------------------
      - name: 🏗️ Build Library
        run: pnpm build:lib

      # ------------------------------------------------------
      # 9️⃣ 요약 출력
      # - 모든 단계가 통과 시, 최종 성공 메시지 출력
      # ------------------------------------------------------
      - name: ✅ Summary
        run: echo "🎉 CI passed successfully!"
