# ====== Husky commit-msg Hook ======
# 커밋 메시지 컨벤션 검사 (Conventional Commit 규칙 기반)
# 문법: <type>(optional scope): <description>

echo "🧾 Checking commit message format..."

pnpm commitlint --edit "$1" || {
  echo ""
  echo "❌ Commit message does not follow Conventional Commit rules."
  echo ""
  echo "💡 Example:"
  echo "    feat(button): add ripple effect"
  echo "    fix(accordion): handle keyboard focus loss"
  echo ""
  echo "🧩 Allowed <type> list:"
  echo "    feat      ✨  새로운 기능 추가"
  echo "    fix       🐞  버그 수정"
  echo "    docs      📝  문서 변경 (README, Storybook 문서 등)"
  echo "    style     💅  코드 스타일 변경 (세미콜론, 인덴트 등, 기능 변화 없음)"
  echo "    refactor  ♻️  리팩토링 (기능 변경 없이 구조 개선)"
  echo "    perf      ⚡️  성능 개선"
  echo "    test      ✅  테스트 추가/수정 (단위 테스트, UI 테스트 등)"
  echo "    build     🏗️  빌드 시스템 수정 (Vite, Tsup, Storybook 설정 등)"
  echo "    ci        🤖  CI/CD 관련 수정 (GitHub Actions, Husky 등)"
  echo "    chore     🧹  기타 유지보수 작업 (패키지 업데이트, 설정 변경 등)"
  echo "    revert    ⏪  이전 커밋 되돌리기"
  echo ""
  echo "📘 Tip:"
  echo "    - type 은 반드시 소문자"
  echo "    - scope 는 선택사항 (컴포넌트명이나 모듈명 권장)"
  echo "    - description 은 마침표 없이 간결하게"
  echo "    - 전체 헤더는 100자 이하로 유지"
  echo ""
  exit 1
}

echo "✅ Commit message format is valid!"
